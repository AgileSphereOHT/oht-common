buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            url "${artifactory_url}repo"
            credentials {
                username = "${artifactory_user}"
                password = "${artifactory_password}"
            }
        }
    }
    dependencies {
        classpath(group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '4.4.17')
    }
}

String candidate = "$System.env.BRANCH_NAME".contentEquals('feature/future') ? 'RELEASE' : 'SNAPSHOT'

allprojects {
    apply plugin: 'com.jfrog.artifactory'
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'maven-publish'
    version = "1.0.0-${candidate}"
    archivesBaseName = 'oht-common'
    group = 'uk.doh.oht'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

String repo = version.endsWith('SNAPSHOT') ? 'libs-snapshot-local' : 'libs-release-local'

artifactory {
    contextUrl = "${artifactory_url}"   //The base Artifactory URL if not overridden by the publisher/resolver
    publish {
        mavenLocal()
        repository {
            repoKey = repo
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true

        }
        defaults {
            // Reference to Gradle publications defined in the build script.
            // This is how we tell the Artifactory Plugin which artifacts should be
            // published to Artifactory.
            publications('mavenJava')
            publishArtifacts = true
            publishPom = true // Publish generated POM files to Artifactory (true by default)
        }
    }
    resolve {
        repository {
            repoKey = 'repo'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
        }
    }
}

//Project dependencies
dependencies {
    compile group: 'org.springframework', name: 'spring-context', version: '4.3.8.RELEASE'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.8.8'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.8'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'
    compile group: 'javax.inject', name: 'javax.inject', version: '1'
    compile group: 'org.projectlombok', name: 'lombok-maven', version: '1.16.16.0'
    compile group: 'org.projectlombok', name: 'lombok', version: '1.16.16'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.mock-server', name: 'mockserver-netty', version: '3.9.1'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.5.2'
}

//Use this for publishing to local Maven repo
//gradle publishToMavenLocal
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact (sourcesJar) {
                classifier = 'sources'
            }
        }
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.0'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    testLogging.showStandardStreams = true
    systemProperties System.properties
}
